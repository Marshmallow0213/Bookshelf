@model IEnumerable<CoreMVC5_UsedBookProject.Models.AdministratorUser>
@{
    ViewData["Title"] = "當前CPU與記憶體使用率";
    Layout = "_LayoutGetCpu";
}
<div class="sidebar">
    <ul class="menu">
        <li class="menu-item">
            <a asp-controller="Administratorlist" asp-action="Adminlist" class="navtext">管理員人員名單</a>
        </li>
        <li class="menu-item">
            <a asp-controller="AdministratorProfile" asp-action="AdministratorData" class="navtext">管理人員控管</a>
        </li>
        <li class="menu-item">
            <a asp-controller="AdminCharts" asp-action="ChartsView" class="navtext">管理員與使用者占比</a>
        </li>
        <li class="menu-item">
            <a asp-controller="GetCpu" asp-action="CPUView" class="navtext" style="background-color: white; color:black;">當前CPU與記憶體使用率</a>
        </li>
        <li class="menu-item">
            <a asp-controller="AdministratorHomePage" asp-action="AdminIndex" class="navtext">主頁面更新</a>
        </li>
        <li class="menu-item">
            <a href="#" class="navtext">按鈕6</a>
        </li>
    </ul>
</div>

<div style="display:flex;">
    <div style="width: 30%; padding: 300px;">
    </div>
    <div class="content">
        <h1>當前本機CPU與記憶體使用率</h1>

        <div>
            <canvas id="cpuChart" style="width: 800px; height: 300px;"></canvas>
        </div>

        <div>
            <canvas id="memoryChart" style="width: 800px; height: 300px;"></canvas>
        </div>

    </div>
</div>
@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-streaming@latest/dist/chartjs-plugin-streaming.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment@latest"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment@latest/dist/chartjs-adapter-moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>

    <script>
        var cpuChart;
        var cpuData = [];
        var cpuLabels = [];

        var memoryChart;
        var memoryData = [];
        var memoryLabels = [];

        document.addEventListener("DOMContentLoaded", function () {
            cpuChart = new Chart(document.getElementById("cpuChart"), {
                type: "bar",
                data: {
                    labels: cpuLabels,
                    datasets: [{
                        label: "CPU Usage",
                        data: cpuData,
                        backgroundColor: "blue",
                        borderColor: "blue",
                        tension: 0
                    }]
                },
                options: {
                    responsive: false,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            type: "realtime",
                            realtime: {
                                duration: 10000,
                                refresh: 1000,
                                delay: 1000,
                                pause: false,
                                ttl: undefined
                            }
                        },
                        y: {
                            min: 0,
                            max: 100,
                            ticks: {
                                stepSize: 10
                            }
                        }
                    }
                }
            });

            memoryChart = new Chart(document.getElementById("memoryChart"), {
                type: "line",
                data: {
                    labels: memoryLabels,
                    datasets: [{
                        label: "Memory Usage",
                        data: memoryData,
                        backgroundColor: "green",
                        borderColor: "green",
                        tension: 0
                    }]
                },
                options: {
                    responsive: false,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            type: "realtime",
                            realtime: {
                                duration: 10000,
                                refresh: 1000,
                                delay: 1000,
                                pause: false,
                                ttl: undefined
                            }
                        },
                        y: {
                            min: 0,
                            ticks: {
                                stepSize: 100
                            }
                        }
                    }
                }
            });

            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/CpuHub")
                .build();

            connection.on("UpdateCpuUsage", function (cpuUsage) {
                cpuData.push(cpuUsage);
                cpuLabels.push("");
                cpuChart.update();
            });

            connection.on("UpdateMemoryUsage", function (memoryUsage) {
                memoryData.push(memoryUsage);
                memoryLabels.push("");
                memoryChart.update();
            });

            connection.start()
                .then(function () {
                    console.log("SignalR connected.");
                })
                .catch(function (err) {
                    console.error("SignalR connection error: " + err);
                });
        });
    </script>
}
