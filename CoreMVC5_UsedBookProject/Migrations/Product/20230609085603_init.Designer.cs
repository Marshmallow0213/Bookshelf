// <auto-generated />
using System;
using CoreMVC5_UsedBookProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreMVC5_UsedBookProject.Migrations.Product
{
    [DbContext(typeof(ProductContext))]
    [Migration("20230609085603_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreMVC5_UsedBookProject.Models.OrderByBarter", b =>
                {
                    b.Property<string>("OrderByBarterId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BuyerId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DenyReason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("OrderByBarterId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderByBarters");

                    b.HasData(
                        new
                        {
                            OrderByBarterId = "OB001",
                            BuyerId = "U003",
                            CreateDate = new DateTime(2023, 6, 9, 16, 56, 2, 557, DateTimeKind.Local).AddTicks(3971),
                            DenyReason = "none",
                            ProductId = "P003",
                            SellerId = "U001",
                            Status = "待確認"
                        });
                });

            modelBuilder.Entity("CoreMVC5_UsedBookProject.Models.OrderByMoney", b =>
                {
                    b.Property<string>("OrderByMoneyId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BuyerId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DenyReason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.HasKey("OrderByMoneyId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderByMoneys");

                    b.HasData(
                        new
                        {
                            OrderByMoneyId = "OM001",
                            BuyerId = "U002",
                            CreateDate = new DateTime(2023, 6, 9, 16, 56, 2, 557, DateTimeKind.Local).AddTicks(1789),
                            DenyReason = "none",
                            ProductId = "P001",
                            SellerId = "U001",
                            Status = "待確認",
                            UnitPrice = 500m
                        },
                        new
                        {
                            OrderByMoneyId = "OM002",
                            BuyerId = "U002",
                            CreateDate = new DateTime(2023, 6, 9, 16, 56, 2, 557, DateTimeKind.Local).AddTicks(2079),
                            DenyReason = "none",
                            ProductId = "P002",
                            SellerId = "U001",
                            Status = "待確認",
                            UnitPrice = 500m
                        });
                });

            modelBuilder.Entity("CoreMVC5_UsedBookProject.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContentText")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image2")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image3")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image4")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image5")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image6")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image7")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image8")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image9")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PublicationDate")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Trade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = "P001",
                            Author = "作者",
                            ContentText = "Context1",
                            CreateBy = "U001",
                            CreateDate = new DateTime(2023, 6, 9, 16, 56, 2, 553, DateTimeKind.Local).AddTicks(1099),
                            Degree = "二手",
                            EditDate = new DateTime(2023, 6, 9, 16, 56, 2, 555, DateTimeKind.Local).AddTicks(8480),
                            ISBN = "9876543210",
                            Image1 = "example.jpg",
                            Image2 = "無圖片",
                            Image3 = "無圖片",
                            Image4 = "無圖片",
                            Image5 = "無圖片",
                            Image6 = "無圖片",
                            Image7 = "無圖片",
                            Image8 = "無圖片",
                            Image9 = "無圖片",
                            PublicationDate = "2023-01-01",
                            Publisher = "出版社",
                            Status = "未上架",
                            Title = "Book1",
                            Trade = "金錢",
                            UnitPrice = 500m
                        },
                        new
                        {
                            ProductId = "P002",
                            Author = "作者",
                            ContentText = "Context2",
                            CreateBy = "U001",
                            CreateDate = new DateTime(2023, 6, 9, 16, 56, 2, 555, DateTimeKind.Local).AddTicks(9209),
                            Degree = "二手",
                            EditDate = new DateTime(2023, 6, 9, 16, 56, 2, 555, DateTimeKind.Local).AddTicks(9214),
                            ISBN = "9876543211",
                            Image1 = "example.jpg",
                            Image2 = "無圖片",
                            Image3 = "無圖片",
                            Image4 = "無圖片",
                            Image5 = "無圖片",
                            Image6 = "無圖片",
                            Image7 = "無圖片",
                            Image8 = "無圖片",
                            Image9 = "無圖片",
                            PublicationDate = "2023-01-01",
                            Publisher = "出版社",
                            Status = "未上架",
                            Title = "Book2",
                            Trade = "金錢",
                            UnitPrice = 500m
                        },
                        new
                        {
                            ProductId = "P003",
                            Author = "作者",
                            ContentText = "Context3",
                            CreateBy = "U001",
                            CreateDate = new DateTime(2023, 6, 9, 16, 56, 2, 555, DateTimeKind.Local).AddTicks(9222),
                            Degree = "二手",
                            EditDate = new DateTime(2023, 6, 9, 16, 56, 2, 555, DateTimeKind.Local).AddTicks(9223),
                            ISBN = "9876543212",
                            Image1 = "example.jpg",
                            Image2 = "無圖片",
                            Image3 = "無圖片",
                            Image4 = "無圖片",
                            Image5 = "無圖片",
                            Image6 = "無圖片",
                            Image7 = "無圖片",
                            Image8 = "無圖片",
                            Image9 = "無圖片",
                            PublicationDate = "2023-01-01",
                            Publisher = "出版社",
                            Status = "未上架",
                            Title = "Book3",
                            Trade = "以物易物",
                            UnitPrice = -1m
                        });
                });

            modelBuilder.Entity("CoreMVC5_UsedBookProject.Models.OrderByBarter", b =>
                {
                    b.HasOne("CoreMVC5_UsedBookProject.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CoreMVC5_UsedBookProject.Models.OrderByMoney", b =>
                {
                    b.HasOne("CoreMVC5_UsedBookProject.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
